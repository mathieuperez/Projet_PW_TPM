{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a Travel, Renting and Ride management server, with the multiple services provided by this server.",
    "version" : "1.0.0",
    "title" : "TPM Project",
    "contact" : {
      "email" : "mathieuperez3@gmail.com"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/cdp/tmp-pw/1.0.0",
  "tags" : [ {
    "name" : "user",
    "description" : "Operations about users"
  }, {
    "name" : "renting",
    "description" : "Operations about rents"
  }, {
    "name" : "ride",
    "description" : "Operations about rides"
  }, {
    "name" : "trip",
    "description" : "Operations about trips"
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/api/users/" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the user who's signing up.",
        "operationId" : "createUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "Register failed"
          },
          "409" : {
            "description" : "There is already a user with this login or email"
          },
          "422" : {
            "description" : "Missing Arguments"
          },
          "500" : {
            "description" : "There was a problem with the database while checking if the login or email already exists"
          }
        }
      }
    },
    "/api/users/token" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Authenticate user",
        "description" : "Logs user into the system",
        "operationId" : "loginUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "query",
          "description" : "The user login",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password in clear text",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Authentification succeeded"
          },
          "400" : {
            "description" : "Authentification failed wrong login or password"
          },
          "422" : {
            "description" : "Missing Arguments"
          }
        }
      }
    },
    "/api/rentings/{login}" : {
      "post" : {
        "tags" : [ "renting" ],
        "summary" : "Create renting",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "createRenting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "path",
          "description" : "The login of the signed in user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "The token that needs to be checked",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Renting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Creating Rentsuccessful"
          },
          "401" : {
            "description" : "No token provided / Failed to authenticate token"
          },
          "409" : {
            "description" : "There is already a rent with this address and date"
          },
          "422" : {
            "description" : "Missing Arguments"
          },
          "500" : {
            "description" : "Creating Rent failed / There was a problem with the database while checking if there is already a rent at this address and time"
          }
        }
      }
    },
    "/api/rentings/{login}/{id}" : {
      "patch" : {
        "tags" : [ "renting" ],
        "summary" : "Modify renting",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "modifyRenting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "path",
          "description" : "The login of the signed in user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the rent to modify.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "The token that needs to be checked",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Modified rent",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Renting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rent modification successful"
          },
          "401" : {
            "description" : "No token provided / Failed to authenticate token"
          },
          "409" : {
            "description" : "There is already a rent with this address and date"
          },
          "422" : {
            "description" : "Missing Arguments"
          },
          "500" : {
            "description" : "There was a problem with the database while checking while checking if there is already a rent at this address and time / There was a problem with the database while checking while checking while checking the rent id / Rent modification failed"
          }
        }
      }
    },
    "/api/rentings/" : {
      "get" : {
        "tags" : [ "renting" ],
        "summary" : "Get all rents of a user",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "getRents",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Get Rentings successful"
          },
          "500" : {
            "description" : "Get Rentings failed"
          }
        }
      }
    },
    "/api/rentings/{login}/" : {
      "get" : {
        "tags" : [ "renting" ],
        "summary" : "Get rents by user login",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "getRentsByLogin",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "path",
          "description" : "The name that needs to be fetched.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "No token provided / Failed to authenticate token"
          },
          "500" : {
            "description" : "Get Rentings failed"
          }
        }
      }
    },
    "/api/rentings/{login}/{id} " : {
      "delete" : {
        "tags" : [ "renting" ],
        "summary" : "Delete renting",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "deleteRenting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "path",
          "description" : "The login of the signed in user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the rent to modify.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "The token that needs to be checked",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleting Rent successful"
          },
          "401" : {
            "description" : "No token provided / Failed to authenticate token"
          },
          "409" : {
            "description" : "There is no rent with this address and date"
          },
          "500" : {
            "description" : "Deleting Rent failed"
          }
        }
      }
    },
    "/api/trips/{login}" : {
      "post" : {
        "tags" : [ "trip" ],
        "summary" : "Create trip",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "createTrip",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "path",
          "description" : "The login of the signed in user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "The token that needs to be checked",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Trip"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Creating Trip successful"
          },
          "401" : {
            "description" : "No token provided / Failed to authenticate token"
          },
          "409" : {
            "description" : "There is already a trip with this address and date"
          },
          "422" : {
            "description" : "Missing Arguments"
          },
          "500" : {
            "description" : "Creating Trip failed / There was a problem with the database while checking if there is already a trip at this address and time"
          }
        }
      }
    },
    "/api/trips/{login}/{id}" : {
      "patch" : {
        "tags" : [ "trip" ],
        "summary" : "Modify trip",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "modifyTrip",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "path",
          "description" : "The login of the signed in user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the trip to modify.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "The token that needs to be checked",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Modified trip",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Trip"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating Trip successful"
          },
          "401" : {
            "description" : "No token provided / Failed to authenticate token"
          },
          "409" : {
            "description" : "There is already a trip with this address and date"
          },
          "422" : {
            "description" : "Missing Arguments"
          },
          "500" : {
            "description" : "There was a problem with the database while checking if there is already a trip at this address and time / Updating Trip failed"
          }
        }
      }
    },
    "/api/trips/" : {
      "get" : {
        "tags" : [ "trip" ],
        "summary" : "Get all trips of a user",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "getTrips",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Get Trips successful"
          },
          "500" : {
            "description" : "Get trips failed"
          }
        }
      }
    },
    "/api/trips/{login}/" : {
      "get" : {
        "tags" : [ "trip" ],
        "summary" : "Get trips by user login",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "getTripsByLogin",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "path",
          "description" : "The name that needs to be fetched.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "401" : {
            "description" : "No token provided / Failed to authenticate token / Get trips failed"
          },
          "500" : {
            "description" : "Get trips failed"
          }
        }
      }
    },
    "/api/trips/{login}/{id} " : {
      "delete" : {
        "tags" : [ "trip" ],
        "summary" : "Delete trip",
        "description" : "This can only be done by a user who's signed in.",
        "operationId" : "deleteTrip",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "path",
          "description" : "The login of the signed in user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the trip to modify.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "header",
          "description" : "The token that needs to be checked",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleting Trip successful"
          },
          "401" : {
            "description" : "No token provided / Failed to authenticate token"
          },
          "409" : {
            "description" : "There is no trip with this address and date"
          },
          "500" : {
            "description" : "Deleting Trip failed"
          }
        }
      }
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "properties" : {
        "login" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "role" : {
          "type" : "string"
        }
      },
      "example" : {
        "password" : "password",
        "role" : "role",
        "login" : "login",
        "email" : "email"
      }
    },
    "Renting" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "price" : {
          "type" : "number"
        },
        "startDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "time" : {
          "type" : "number"
        },
        "surface" : {
          "type" : "number"
        },
        "description" : {
          "type" : "string"
        },
        "login" : {
          "type" : "string"
        }
      },
      "example" : {
        "country" : "country",
        "address" : "address",
        "surface" : 1.46581298050294517310021547018550336360931396484375,
        "city" : "city",
        "endDate" : "endDate",
        "price" : 0.80082819046101150206595775671303272247314453125,
        "description" : "description",
        "time" : 6.02745618307040320615897144307382404804229736328125,
        "login" : "login",
        "startDate" : "startDate"
      }
    },
    "Ride" : {
      "type" : "object",
      "properties" : {
        "startCity" : {
          "type" : "string"
        },
        "arrivalCity" : {
          "type" : "string"
        },
        "start" : {
          "type" : "string"
        },
        "arrival" : {
          "type" : "string"
        },
        "price" : {
          "type" : "number"
        },
        "seat" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string"
        },
        "startTime" : {
          "type" : "string"
        },
        "arrivalTime" : {
          "type" : "string"
        },
        "conveyance" : {
          "type" : "string"
        },
        "login" : {
          "type" : "string"
        }
      }
    },
    "Trip" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "price" : {
          "type" : "number"
        },
        "startDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        },
        "startArea" : {
          "type" : "string"
        },
        "endArea" : {
          "type" : "string"
        },
        "time" : {
          "type" : "number"
        },
        "description" : {
          "type" : "string"
        },
        "login" : {
          "type" : "string"
        }
      },
      "example" : {
        "country" : "country",
        "startArea" : "startArea",
        "endArea" : "endArea",
        "address" : "address",
        "city" : "city",
        "endDate" : "endDate",
        "price" : 0.80082819046101150206595775671303272247314453125,
        "description" : "description",
        "time" : 6.02745618307040320615897144307382404804229736328125,
        "login" : "login",
        "startDate" : "startDate"
      }
    }
  }
}
